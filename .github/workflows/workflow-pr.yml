name: Python Pull Request Workflow
on: [pull_request]

jobs:
  qa:
    name: Quality and Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.5]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/backend/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies using Poetry
        working-directory: backend
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - name: View Poetry --help
        working-directory: backend
        run: poetry --help

      - name: Install dependencies
        working-directory: backend
        shell: bash
        run: python -m poetry install

      - name: Wemake Python Styleguide
        working-directory: backend
        uses: wemake-services/wemake-python-styleguide@0.16.0
        continue-on-error: true
        with:
          reporter: "github-pr-review"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint with Black
        working-directory: backend
        run: |
          poetry run black --check .

      - name: Run Tests
        working-directory: backend
        run: |
          poetry run python manage.py test
